<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="GuardianAngelFullDescription" xml:space="preserve">
    <value>クルー役職
ボタン能力「護衛」
　・船員一人を対象にして発動
　・発動後一定時間その人にシールドが付与される
　・シールドが付与されている状況でその船員がキルされると、そのキル
　が無効化される(ヴィランのキルは貫通)</value>
  </data>
  <data name="Poltergeist" xml:space="preserve">
    <value>ポルターガイスト</value>
  </data>
  <data name="PoltergeistRange" xml:space="preserve">
    <value>死体を検知できる範囲</value>
  </data>
  <data name="PoltergeistAbilityCoolTime" xml:space="preserve">
    <value>「騒霊」のクールタイム</value>
  </data>
  <data name="PoltergeistAbilityActiveTime" xml:space="preserve">
    <value>「騒霊」によって死体が運べる時間</value>
  </data>
  <data name="PoltergeistIsReportAbility" xml:space="preserve">
    <value>「騒霊」の能力発動を報告するか</value>
  </data>
  <data name="PoltergeistAbilityCount" xml:space="preserve">
    <value>「騒霊」の発動可能回数</value>
  </data>
  <data name="PoltergeistShortDescription" xml:space="preserve">
    <value>「騒霊」で通報しやすい場所に死体を運ぼう</value>
  </data>
  <data name="PoltergeistFullDescription" xml:space="preserve">
    <value>死体を移動できるゴーストクルー役職
ボタン能力「騒霊」
　・発動後近くにある死体を一定時間自由に移動できる
　・キャリアー等の能力で他の人が死体を持っている場合、その死体を
　奪うことは出来ない(逆に奪われることもある)</value>
  </data>
  <data name="PoltergeistMoveDeadbodyButton" xml:space="preserve">
    <value>騒霊</value>
  </data>
  <data name="PoltergeistMoveDeadbody" xml:space="preserve">
    <value>ポルターガイストが死体を動かしました</value>
  </data>
  <data name="Faunus" xml:space="preserve">
    <value>ファウヌス</value>
  </data>
  <data name="FaunusAbilityCoolTime" xml:space="preserve">
    <value>「恵み」のクールタイム</value>
  </data>
  <data name="FaunusAbilityActiveTime" xml:space="preserve">
    <value>「恵み」によってサボタージュの修理画面が開ける時間</value>
  </data>
  <data name="FaunusIsReportAbility" xml:space="preserve">
    <value>「恵み」の能力発動を報告するか</value>
  </data>
  <data name="FaunusAbilityCount" xml:space="preserve">
    <value>「恵み」が発動できる回数</value>
  </data>
  <data name="FaunusShortDescription" xml:space="preserve">
    <value>「恵み」を使い、サボタージュを修理しよう</value>
  </data>
  <data name="FaunusFullDescription" xml:space="preserve">
    <value>霊界からサボタージュに干渉できるゴーストクルー役職
ボタン能力「恵み」
　・発動すると通信障害以外のサボタージュの修理画面を開くことが出来る
　・複数人で治すサボタージュの場合、どちらかがランダムで選ばれる
　・修理画面は一定時間経過後強制的にクローズされる</value>
  </data>
  <data name="FaunusOpenSaboConsoleButton" xml:space="preserve">
    <value>恵み</value>
  </data>
  <data name="FaunusOpenSaboConsole" xml:space="preserve">
    <value>ファウヌスがサボタージュに干渉しました</value>
  </data>
  <data name="Shutter" xml:space="preserve">
    <value>シャッター</value>
  </data>
  <data name="ShutterPhotoRange" xml:space="preserve">
    <value>「心霊撮影」の範囲</value>
  </data>
  <data name="ShutterRightPlayerNameRate" xml:space="preserve">
    <value>「心霊撮影」で名前がぼやけない確率</value>
  </data>
  <data name="ShutterAbilityCoolTime" xml:space="preserve">
    <value>「心霊撮影」のクールタイム</value>
  </data>
  <data name="ShutterIsReportAbility" xml:space="preserve">
    <value>「心霊撮影」の能力発動を報告するか</value>
  </data>
  <data name="ShutterAbilityCount" xml:space="preserve">
    <value>「心霊撮影」が使用できる回数</value>
  </data>
  <data name="ShutterShortDescription" xml:space="preserve">
    <value>「心霊撮影」で決定的な瞬間を捉えろ</value>
  </data>
  <data name="ShutterFullDescription" xml:space="preserve">
    <value>霊界から撮影した写真を共有出来るゴーストクルー役職
この幽霊役職はフォトグラファーのみアサインされる
ボタン能力「心霊撮影」:
　・ボタンを押すことで範囲内のプレイヤーの位置情報を記録
　した「写真」を撮ることが出来る
　・撮った写真は会議開始後チャットでその「写真」の内容を
　知ることが出来る
　・「「心霊撮影」で正しい名前が表示される確率」によって一部名前は
　表示されない
　・写真の名前はランダム命名表から決定される</value>
  </data>
  <data name="ShutterTakePhotoButton" xml:space="preserve">
    <value>心霊撮影</value>
  </data>
  <data name="ShutterTakePhoto" xml:space="preserve">
    <value>シャッターが撮った写真が会議室に置いてあった</value>
  </data>
  <data name="smokingThisName" xml:space="preserve">
    <value>このプレイヤーはボヤケて見えなかった</value>
  </data>
  <data name="ShutterTakePhotoReport" xml:space="preserve">
    <value>置かれていた写真の詳細\n{0}</value>
  </data>
</root>