<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Ventgeist" xml:space="preserve">
    <value>搗蛋鬼</value>
  </data>
  <data name="VentgeistRange" xml:space="preserve">
    <value>技能觸發範圍</value>
  </data>
  <data name="VentgeistAbilityCoolTime" xml:space="preserve">
    <value>技能冷卻</value>
  </data>
  <data name="VentgeistAbilityCount" xml:space="preserve">
    <value>技能最大使用次數</value>
  </data>
  <data name="VentgeistIsReportAbility" xml:space="preserve">
    <value>技能發動時會通知其他玩家</value>
  </data>
  <data name="VentgeistShortDescription" xml:space="preserve">
    <value>開關管道口來驚嚇船員</value>
  </data>
  <data name="VentgeistFullDescription" xml:space="preserve">
    <value>搗蛋鬼屬於內鬼陣營幽靈職業。
可以開關管道口。

·主動技能“管道工”
可以開關管道口，干擾玩家的判斷。</value>
  </data>
  <data name="VentgeistVentAnimeButton" xml:space="preserve">
    <value>開關管道口</value>
  </data>
  <data name="VentgeistVentAnime" xml:space="preserve">
    <value>搗蛋鬼對管道口動了手腳</value>
  </data>
  <data name="SaboEvil" xml:space="preserve">
    <value>催命鬼</value>
  </data>
  <data name="SaboEvilAbilityCoolTime" xml:space="preserve">
    <value>技能冷卻</value>
  </data>
  <data name="SaboEvilAbilityCount" xml:space="preserve">
    <value>技能最大使用次數</value>
  </data>
  <data name="SaboEvilIsReportAbility" xml:space="preserve">
    <value>技能發動時會通知其他玩家</value>
  </data>
  <data name="SaboEvilShortDescription" xml:space="preserve">
    <value>恢復緊急破壞的冷卻，讓遊戲對內鬼更加有利</value>
  </data>
  <data name="SaboEvilFullDescription" xml:space="preserve">
    <value>催命鬼屬於內鬼陣營幽靈職業。
可以恢復內鬼陣營的緊急破壞冷卻。

·主動技能“破壞重置”
強制恢復內鬼陣營緊急破壞冷卻。
這個效果對其他陣營的擁有破壞能力的玩家不適用。</value>
  </data>
  <data name="SaboEvilResetSabotageCoolButton" xml:space="preserve">
    <value>破壞重置</value>
  </data>
  <data name="SaboEvilResetSabotageCool" xml:space="preserve">
    <value>催命鬼讓飛船變得更不穩定了</value>
  </data>
  <data name="Igniter" xml:space="preserve">
    <value>煉獄鬼</value>
  </data>
  <data name="IgniterAbilityCoolTime" xml:space="preserve">
    <value>技能冷卻</value>
  </data>
  <data name="IgniterAbilityActiveTime" xml:space="preserve">
    <value>技能持續時間</value>
  </data>
  <data name="IgniterIsReportAbility" xml:space="preserve">
    <value>技能發動時會通知其他玩家</value>
  </data>
  <data name="IgniterAbilityCount" xml:space="preserve">
    <value>技能最大使用次數</value>
  </data>
  <data name="IgniterIsEffectImpostor" xml:space="preserve">
    <value>內鬼陣營會受到熄燈效果影響</value>
  </data>
  <data name="IgniterIsEffectNeutral" xml:space="preserve">
    <value>獨立陣營會受到熄燈效果影響</value>
  </data>
  <data name="IgniterShortDescription" xml:space="preserve">
    <value>在煉獄中吹滅飛船的光明</value>
  </data>
  <data name="IgniterFullDescription" xml:space="preserve">
    <value>煉獄鬼屬於內鬼陣營幽靈職業。
可以在死亡狀態下造成額外照明破壞。
這個幽靈職業只會被分配給絕境者。

·主動技能“煉獄吹熄”
技能使用後，所有玩家的視野變為和照明破壞時視野相同。
該技能與照明破壞結算類似，因此不受照明破壞影響的玩家若沒有特別設置也不受該技能的影響。</value>
  </data>
  <data name="IgniterSwitchLightButton" xml:space="preserve">
    <value>煉獄吹熄</value>
  </data>
  <data name="IgniterSwitchLight" xml:space="preserve">
    <value>煉獄鬼吹熄了飛船上的光明</value>
  </data>
  <data name="Doppelganger" xml:space="preserve">
    <value>二重身</value>
  </data>
  <data name="DoppelgangerAbilityCoolTime" xml:space="preserve">
    <value>對偶冷卻時間</value>
  </data>
  <data name="DoppelgangerAbilityActiveTime" xml:space="preserve">
    <value>對偶持續時間</value>
  </data>
  <data name="DoppelgangerIsReportAbility" xml:space="preserve">
    <value>二重身可報告屍體</value>
  </data>
  <data name="DoppelgangerAbilityCount" xml:space="preserve">
    <value>化形可使用次數</value>
  </data>
  <data name="DoppelgangerDoppel" xml:space="preserve">
    <value>誰可以發現二重身</value>
  </data>
  <data name="DoppelgangerDoppelButton" xml:space="preserve">
    <value>對偶</value>
  </data>
  <data name="DoppelgangerFullDescription" xml:space="preserve">
    <value>二重身屬於內鬼陣營幽靈職業。
可以假冒他人。

·主動技能“對偶”
可以變形為別人的模樣兵器讓其他玩家看到。</value>
  </data>
  <data name="DoppelgangerShortDescription" xml:space="preserve">
    <value>給他們一個驚喜吧</value>
  </data>
</root>