<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Ventgeist" xml:space="preserve">
    <value>ベントガイスト</value>
  </data>
  <data name="VentgeistRange" xml:space="preserve">
    <value>ベントを検知できる範囲</value>
  </data>
  <data name="VentgeistAbilityCoolTime" xml:space="preserve">
    <value>「ベント開閉」のクールタイム</value>
  </data>
  <data name="VentgeistAbilityCount" xml:space="preserve">
    <value>「ベント開閉」の使用回数</value>
  </data>
  <data name="VentgeistIsReportAbility" xml:space="preserve">
    <value>「ベント開閉」の能力発動を報告するか</value>
  </data>
  <data name="VentgeistShortDescription" xml:space="preserve">
    <value>ベントを開閉させてクルーを驚かせよう</value>
  </data>
  <data name="VentgeistFullDescription" xml:space="preserve">
    <value>ベントを開閉できるゴーストインポスター役職
ボタン能力「ベント開閉」
　・ベントを開閉させます</value>
  </data>
  <data name="VentgeistVentAnimeButton" xml:space="preserve">
    <value>ベント開閉</value>
  </data>
  <data name="VentgeistVentAnime" xml:space="preserve">
    <value>ベントガイストがベントを動かしたみたいです</value>
  </data>
  <data name="SaboEvil" xml:space="preserve">
    <value>サボり魔</value>
  </data>
  <data name="SaboEvilAbilityCoolTime" xml:space="preserve">
    <value>「サボリッシュ」のクールタイム</value>
  </data>
  <data name="SaboEvilAbilityCount" xml:space="preserve">
    <value>「サボリッシュ」の発動可能回数</value>
  </data>
  <data name="SaboEvilIsReportAbility" xml:space="preserve">
    <value>「サボリッシュ」の能力発動を報告するか</value>
  </data>
  <data name="SaboEvilShortDescription" xml:space="preserve">
    <value>サボタージュのクールタイムを回復させ有利に動こう</value>
  </data>
  <data name="SaboEvilFullDescription" xml:space="preserve">
    <value>仲間のサボタージュのクールタイムを回復させるゴーストインポスター役職
ボタン能力「サボリッシュ」
　・サボタージュのクールタイムを強制的に回復させる
　・このクールタイムが回復するのはインポスター陣営のみ</value>
  </data>
  <data name="SaboEvilResetSabotageCoolButton" xml:space="preserve">
    <value>サボリッシュ</value>
  </data>
  <data name="SaboEvilResetSabotageCool" xml:space="preserve">
    <value>サボり魔がサボタージュの発動を早めました</value>
  </data>
  <data name="Igniter" xml:space="preserve">
    <value>イグナイター</value>
  </data>
  <data name="IgniterAbilityCoolTime" xml:space="preserve">
    <value>「幽霊停電」のクールタイム</value>
  </data>
  <data name="IgniterAbilityActiveTime" xml:space="preserve">
    <value>「幽霊停電」の発動時間</value>
  </data>
  <data name="IgniterIsReportAbility" xml:space="preserve">
    <value>「幽霊停電」の能力発動を報告するか</value>
  </data>
  <data name="IgniterAbilityCount" xml:space="preserve">
    <value>「幽霊停電」の発動可能回数</value>
  </data>
  <data name="IgniterIsEffectImpostor" xml:space="preserve">
    <value>インポスターが「幽霊停電」の影響を受けるか</value>
  </data>
  <data name="IgniterIsEffectNeutral" xml:space="preserve">
    <value>ニュートラルが「幽霊停電」の影響を受けるか</value>
  </data>
  <data name="IgniterShortDescription" xml:space="preserve">
    <value>「幽霊停電」を起こしインポスターをサポートしよう</value>
  </data>
  <data name="IgniterFullDescription" xml:space="preserve">
    <value>霊界から特殊な停電「幽霊停電」を起こせるゴーストインポスター役職
この幽霊役職はラストウルフのみアサインされる
ボタン能力「幽霊停電」:
　・ボタンを押すことでプレイヤーの視界を停電時の視界にすることか
　出来る
　・この視界は停電時の視界の値が参照されるので停電等の影響が受けない
　設定になっている役職は影響を受けない</value>
  </data>
  <data name="IgniterSwitchLightButton" xml:space="preserve">
    <value>幽霊停電</value>
  </data>
  <data name="IgniterSwitchLight" xml:space="preserve">
    <value>イグナイターが明かりを落としました</value>
  </data>
</root>