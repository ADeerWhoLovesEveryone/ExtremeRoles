<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Ventgeist" xml:space="preserve">
    <value>捣蛋鬼</value>
  </data>
  <data name="VentgeistRange" xml:space="preserve">
    <value>技能触发范围</value>
  </data>
  <data name="VentgeistAbilityCoolTime" xml:space="preserve">
    <value>技能冷却</value>
  </data>
  <data name="VentgeistAbilityCount" xml:space="preserve">
    <value>技能最大使用次数</value>
  </data>
  <data name="VentgeistIsReportAbility" xml:space="preserve">
    <value>技能发动时会通知其他玩家</value>
  </data>
  <data name="VentgeistShortDescription" xml:space="preserve">
    <value>开关管道口来惊吓船员</value>
  </data>
  <data name="VentgeistFullDescription" xml:space="preserve">
    <value>捣蛋鬼属于内鬼阵营幽灵职业。
可以开关管道口。

·主动技能“管道工”
可以开关管道口，干扰玩家的判断。</value>
  </data>
  <data name="VentgeistVentAnimeButton" xml:space="preserve">
    <value>开关管道口</value>
  </data>
  <data name="VentgeistVentAnime" xml:space="preserve">
    <value>捣蛋鬼对管道口动了手脚</value>
  </data>
  <data name="SaboEvil" xml:space="preserve">
    <value>催命鬼</value>
  </data>
  <data name="SaboEvilAbilityCoolTime" xml:space="preserve">
    <value>技能冷却</value>
  </data>
  <data name="SaboEvilAbilityCount" xml:space="preserve">
    <value>技能最大使用次数</value>
  </data>
  <data name="SaboEvilIsReportAbility" xml:space="preserve">
    <value>技能发动时会通知其他玩家</value>
  </data>
  <data name="SaboEvilShortDescription" xml:space="preserve">
    <value>恢复紧急破坏的冷却，让游戏对内鬼更加有利</value>
  </data>
  <data name="SaboEvilFullDescription" xml:space="preserve">
    <value>催命鬼属于内鬼阵营幽灵职业。
可以恢复内鬼阵营的紧急破坏冷却。

·主动技能“破坏重置”
强制恢复内鬼阵营紧急破坏冷却。
这个效果对其他阵营的拥有破坏能力的玩家不适用。</value>
  </data>
  <data name="SaboEvilResetSabotageCoolButton" xml:space="preserve">
    <value>破坏重置</value>
  </data>
  <data name="SaboEvilResetSabotageCool" xml:space="preserve">
    <value>催命鬼让飞船变得更不稳定了</value>
  </data>
  <data name="Igniter" xml:space="preserve">
    <value>炼狱鬼</value>
  </data>
  <data name="IgniterAbilityCoolTime" xml:space="preserve">
    <value>技能冷却</value>
  </data>
  <data name="IgniterAbilityActiveTime" xml:space="preserve">
    <value>技能持续时间</value>
  </data>
  <data name="IgniterIsReportAbility" xml:space="preserve">
    <value>技能发动时会通知其他玩家</value>
  </data>
  <data name="IgniterAbilityCount" xml:space="preserve">
    <value>技能最大使用次数</value>
  </data>
  <data name="IgniterIsEffectImpostor" xml:space="preserve">
    <value>内鬼阵营会受到熄灯效果影响</value>
  </data>
  <data name="IgniterIsEffectNeutral" xml:space="preserve">
    <value>独立阵营会受到熄灯效果影响</value>
  </data>
  <data name="IgniterShortDescription" xml:space="preserve">
    <value>在炼狱中吹灭飞船的光明</value>
  </data>
  <data name="IgniterFullDescription" xml:space="preserve">
    <value>炼狱鬼属于内鬼阵营幽灵职业。
可以在死亡状态下造成额外照明破坏。
这个幽灵职业只会被分配给绝境者。

·主动技能“炼狱吹熄”
技能使用后，所有玩家的视野变为和照明破坏时视野相同。
该技能与照明破坏结算类似，因此不受照明破坏影响的玩家若没有特别设置也不受该技能的影响。</value>
  </data>
  <data name="IgniterSwitchLightButton" xml:space="preserve">
    <value>炼狱吹熄</value>
  </data>
  <data name="IgniterSwitchLight" xml:space="preserve">
    <value>炼狱鬼吹熄了飞船上的光明</value>
  </data>
  <data name="Doppelganger" xml:space="preserve">
    <value>二重身</value>
  </data>
  <data name="DoppelgangerAbilityCoolTime" xml:space="preserve">
    <value>对偶冷却时间</value>
  </data>
  <data name="DoppelgangerAbilityActiveTime" xml:space="preserve">
    <value>对偶持续时间</value>
  </data>
  <data name="DoppelgangerIsReportAbility" xml:space="preserve">
    <value>二重身可报告尸体</value>
  </data>
  <data name="DoppelgangerAbilityCount" xml:space="preserve">
    <value>化形可使用次数</value>
  </data>
  <data name="DoppelgangerDoppel" xml:space="preserve">
    <value>谁可以发现二重身</value>
  </data>
  <data name="DoppelgangerDoppelButton" xml:space="preserve">
    <value>对偶</value>
  </data>
  <data name="DoppelgangerFullDescription" xml:space="preserve">
    <value>二重身属于内鬼阵营幽灵职业。
可以假冒他人。

·主动技能“对偶”
可以变形为别人的模样兵器让其他玩家看到。</value>
  </data>
  <data name="DoppelgangerShortDescription" xml:space="preserve">
    <value>给他们一个惊喜吧</value>
  </data>
</root>